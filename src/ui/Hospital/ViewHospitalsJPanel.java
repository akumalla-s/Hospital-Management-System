/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Hospital;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Hospital;
import model.HospitalDirectory;

/**
 *
 * @author karthiksonti
 */
public class ViewHospitalsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewHospitalsJPanel
     */
    JPanel userProcessContainer;
    HospitalDirectory hospitalDirectory;
    public ViewHospitalsJPanel(JPanel userProcessContainer, HospitalDirectory hospitalDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.hospitalDirectory = hospitalDirectory;
        addHospitalData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        hospitalData = new javax.swing.JTable();
        backButton = new javax.swing.JButton();
        viewHospitalButton = new javax.swing.JButton();
        deleteHospitalButton = new javax.swing.JButton();
        updateHospitalButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        hospitalName = new javax.swing.JTextField();
        hospitalID = new javax.swing.JTextField();
        hospitalCommunity = new javax.swing.JTextField();
        hospitalCity = new javax.swing.JTextField();

        setBackground(new java.awt.Color(160, 208, 214));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        hospitalData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Hospital Name", "ID", "Community", "City"
            }
        ));
        jScrollPane1.setViewportView(hospitalData);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(104, 48, -1, 196));

        backButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        backButton.setText("<<BACK");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(462, 7, -1, -1));

        viewHospitalButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        viewHospitalButton.setText("View");
        viewHospitalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewHospitalButtonActionPerformed(evt);
            }
        });
        add(viewHospitalButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(104, 256, -1, -1));

        deleteHospitalButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        deleteHospitalButton.setText("Delete");
        deleteHospitalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteHospitalButtonActionPerformed(evt);
            }
        });
        add(deleteHospitalButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 256, -1, -1));

        updateHospitalButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        updateHospitalButton.setText("Update");
        updateHospitalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateHospitalButtonActionPerformed(evt);
            }
        });
        add(updateHospitalButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(464, 256, -1, -1));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setText("Hospital Name");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(182, 320, -1, -1));
        jLabel1.setVisible(false);

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel2.setText("ID");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(182, 363, -1, -1));
        jLabel2.setVisible(false);

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel3.setText("Community");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(182, 404, -1, -1));
        jLabel3.setVisible(false);

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel4.setText("City");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(182, 451, -1, -1));
        jLabel4.setVisible(false);
        add(hospitalName, new org.netbeans.lib.awtextra.AbsoluteConstraints(352, 312, 150, 35));
        hospitalName.setVisible(false);

        hospitalID.setEnabled(false);
        add(hospitalID, new org.netbeans.lib.awtextra.AbsoluteConstraints(352, 355, 150, 35));
        hospitalID.setVisible(false);
        add(hospitalCommunity, new org.netbeans.lib.awtextra.AbsoluteConstraints(352, 396, 150, 35));
        hospitalCommunity.setVisible(false);
        add(hospitalCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(352, 443, 150, 35));
        hospitalCity.setVisible(false);
    }// </editor-fold>//GEN-END:initComponents

    private void viewHospitalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewHospitalButtonActionPerformed
        // TODO add your handling code here:
        int rowIndex = hospitalData.getSelectedRow();
        if (rowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row to view hospital data!!", "Info", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) hospitalData.getModel();
        
        Hospital hospital = (Hospital) model.getValueAt(rowIndex, 0);
        
        jLabel1.setVisible(true);
        jLabel2.setVisible(true);
        jLabel3.setVisible(true);
        jLabel4.setVisible(true);
        hospitalName.setVisible(true);
        hospitalID.setVisible(true);
        hospitalCommunity.setVisible(true);
        hospitalCity.setVisible(true);
        
        hospitalName.setText(hospital.getHospitalName());
        hospitalCommunity.setText(hospital.getHospitalCommunity());
        hospitalCity.setText(hospital.getHospitalCity());
        hospitalID.setText(String.valueOf(hospital.getHospitalID()));
    }//GEN-LAST:event_viewHospitalButtonActionPerformed

    private void deleteHospitalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteHospitalButtonActionPerformed
        // TODO add your handling code here:
        int rowIndex = hospitalData.getSelectedRow();
        if (rowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row to delete hospital data!!", "Info", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) hospitalData.getModel();
        
        Hospital hospital = (Hospital) model.getValueAt(rowIndex, 0);
        hospitalDirectory.removeHospital(hospital);
        JOptionPane.showMessageDialog(this,"Hospital Data deleted successfully - "+ hospital.getHospitalName(), "Info", JOptionPane.INFORMATION_MESSAGE);
        addHospitalData();
        
        hospitalName.setText("");
        hospitalCommunity.setText("");
        hospitalCity.setText("");
        hospitalID.setText("");
    }//GEN-LAST:event_deleteHospitalButtonActionPerformed

    private void updateHospitalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateHospitalButtonActionPerformed
        // TODO add your handling code here:
        int rowIndex = hospitalData.getSelectedRow();
        if (rowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row to update hospital data!!", "Info", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) hospitalData.getModel();
        
        Hospital hospital = (Hospital) model.getValueAt(rowIndex, 0);
        boolean saveFlag = true;
        if(hospitalID.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please click on view button before you update! ","Warning",JOptionPane.WARNING_MESSAGE);
            saveFlag = false;
        }
        else if((hospitalName.getText()).isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Hospital Name can't be empty","Warning",JOptionPane.WARNING_MESSAGE);
            saveFlag = false;
        }else if(validateInput(hospitalName.getText()) == false )
        {
           JOptionPane.showMessageDialog(this, "Invalid Hospital Name","Warning",JOptionPane.WARNING_MESSAGE);
           saveFlag = false;
        }else if ((hospitalCommunity.getText()).isEmpty()){
            JOptionPane.showMessageDialog(this, "Hospital Community can't be empty","Warning",JOptionPane.WARNING_MESSAGE);
           saveFlag = false;
        }
        else if(validateInput(hospitalCommunity.getText()) == false )
        {
           JOptionPane.showMessageDialog(this, "Invalid Hospital Community","Warning",JOptionPane.WARNING_MESSAGE);
           saveFlag = false;
        }else if((hospitalCity.getText()).isEmpty()){
            JOptionPane.showMessageDialog(this, "Hospital City can't be empty","Warning",JOptionPane.WARNING_MESSAGE);
           saveFlag = false;
        }else if(validateInput(hospitalCity.getText()) == false )
        {
           JOptionPane.showMessageDialog(this, "Invalid Hospital City","Warning",JOptionPane.WARNING_MESSAGE);
           saveFlag = false;
        }
        
        for (Hospital h : hospitalDirectory.getHospitalDirectory()){
            if(h.getHospitalName().equals(hospitalName.getText()) && h.getHospitalCity().equals(hospitalCity.getText()) && h.getHospitalCommunity().equals(hospitalCommunity.getText())){
                JOptionPane.showMessageDialog(this, "Hospital already exists in : "+h.getHospitalCommunity()+", "+h.getHospitalCity(), "Error", JOptionPane.ERROR_MESSAGE);
                saveFlag = false;
            }
        }
        if(saveFlag == true){
        
            hospital.setHospitalName(hospitalName.getText());
            hospital.setHospitalCommunity(hospitalCommunity.getText());
            hospital.setHospitalCity(hospitalCity.getText());

            JOptionPane.showMessageDialog(this,"Hospital Data updated successfully - "+ hospital.getHospitalName(), "Info", JOptionPane.INFORMATION_MESSAGE);
            addHospitalData();
            hospitalName.setText("");
            hospitalCommunity.setText("");
            hospitalCity.setText("");
            hospitalID.setText("");
        }
    }//GEN-LAST:event_updateHospitalButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void addHospitalData() {
        
        DefaultTableModel model = (DefaultTableModel) hospitalData.getModel();
        model.setRowCount(0);
        
        for (Hospital hospital : hospitalDirectory.getHospitalDirectory()){
            Object[] row = new Object[4];
            row[0] = hospital;
            row[1] = hospital.getHospitalID();
            row[2] = hospital.getHospitalCommunity();
            row[3] = hospital.getHospitalCity();
 
            model.addRow(row);
        }
        
    }
    
    private boolean validateInput(String hospitalValues) {
        //String regex = "[a-zA-Z]+";  
        String regex = "[A-Z a-z]*\\s*?";
        return hospitalValues.matches(regex);  
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton deleteHospitalButton;
    private javax.swing.JTextField hospitalCity;
    private javax.swing.JTextField hospitalCommunity;
    private javax.swing.JTable hospitalData;
    private javax.swing.JTextField hospitalID;
    private javax.swing.JTextField hospitalName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton updateHospitalButton;
    private javax.swing.JButton viewHospitalButton;
    // End of variables declaration//GEN-END:variables
}
