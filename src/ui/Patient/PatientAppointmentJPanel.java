/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Patient;

import java.awt.CardLayout;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Doctor;
import model.DoctorDirectory;
import model.Encounter;
import model.EncounterHistory;
import model.Person;

/**
 *
 * @author karthiksonti
 */
public class PatientAppointmentJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PatientAppointmentJPanel
     */
    JPanel userProcessContainer;
    DoctorDirectory doctorDirectory;
    Person person; 
    EncounterHistory encounterHistory;
    public PatientAppointmentJPanel(JPanel userProcessContainer, DoctorDirectory doctorDirectory, Person person, EncounterHistory encounterHistory) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.person=person;
        this.doctorDirectory=doctorDirectory;
        this.encounterHistory = encounterHistory;
        addDoctorData();    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        doctorData = new javax.swing.JTable();
        backButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        patientPurpose = new javax.swing.JTextField();
        appointmentButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(160, 208, 214));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        doctorData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Doctor Name", "ID", "Gender", "Hospital"
            }
        ));
        jScrollPane1.setViewportView(doctorData);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 81, -1, 187));

        backButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        backButton.setText("<<BACK");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(451, 40, -1, -1));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setText("Purpose of Visit");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(169, 309, -1, -1));
        add(patientPurpose, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 301, 150, 35));

        appointmentButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        appointmentButton.setText("Fix Appointment");
        appointmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appointmentButtonActionPerformed(evt);
            }
        });
        add(appointmentButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(236, 354, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
         userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void appointmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appointmentButtonActionPerformed
        // TODO add your handling code here:
        
        int rowIndex = doctorData.getSelectedRow();
        if (rowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row to book doctor appointment!!", "Info", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");  
        LocalDateTime now = LocalDateTime.now();
        
        DefaultTableModel model = (DefaultTableModel) doctorData.getModel();
        
        Doctor doctor = (Doctor) model.getValueAt(rowIndex, 0);
        
        
        
        boolean saveFlag = true;
        
        if(patientPurpose.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter a valid purpose of visit");
            saveFlag = false;
            
        }else if(patientPurpose.getText().matches("[A-Z a-z]*\\s*?") == false){
            JOptionPane.showMessageDialog(this, "Enter a valid purpose of visit");
            saveFlag = false;
        }     
        if(saveFlag == true ){
        Encounter e  = encounterHistory.addEncounter();    
        e.setDoctorName(doctor.getDoctorName());
            e.setDoctorID(doctor.getDoctorID());
            e.setPatientID(person.getPersonID());
            e.setPatientName(person.getPersonName());
            e.setPatientPurpose(patientPurpose.getText());
            e.setPatientAge(person.getPersonAge());
            e.setPatientSex(person.getPersonSex());
            e.setStatus("Booked");
            e.setEncounterDate(dtf.format(now));

            patientPurpose.setText("");

            JOptionPane.showMessageDialog(this, "doctor appointment booked!!", "Info", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_appointmentButtonActionPerformed
    
    private void addDoctorData() {
        
        DefaultTableModel model = (DefaultTableModel) doctorData.getModel();
        model.setRowCount(0);
        
        for (Doctor doctor : doctorDirectory.getDoctorDirectory()){
            Object[] row = new Object[4];
            row[0] = doctor;
            row[1] = doctor.getDoctorID();
            row[2] = doctor.getDoctorSex();
            row[3] = doctor.getDoctorHospital();
 
            model.addRow(row);
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton appointmentButton;
    private javax.swing.JButton backButton;
    private javax.swing.JTable doctorData;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField patientPurpose;
    // End of variables declaration//GEN-END:variables
}
