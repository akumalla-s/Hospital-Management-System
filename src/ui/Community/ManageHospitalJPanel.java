/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Community;

import java.awt.CardLayout;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Hospital;
import model.HospitalDirectory;

/**
 *
 * @author karthiksonti
 */
public class ManageHospitalJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageHospitalJPanel
     */
    JPanel userProcessContainer;
    int selectedRowIndex;
    HospitalDirectory hospitalDirectory;
    String selectedCommunityField;
    public ManageHospitalJPanel(JPanel userProcessContainer, HospitalDirectory hospitalDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.hospitalDirectory = hospitalDirectory;
        
        createDropDown();
  
    }
    //function to create dropdown
    public void createDropDown(){
        String[] communityArray = new String[30];
        hospitalCommunityDropDown.removeAllItems();
        int counter=0;
        for(Hospital h : hospitalDirectory.getHospitalDirectory())
        {
            boolean retval = Arrays.asList(communityArray).contains(h.getHospitalCommunity());
            if(retval == false)
            {
                communityArray[counter] = h.getHospitalCommunity();
                counter++;
                hospitalCommunityDropDown.addItem(h.getHospitalCommunity());
            }     
        }
    }
    //function to generate table based on selected dropdown option
    private void populateTable(String searchItem)
    {
        DefaultTableModel model = (DefaultTableModel) hospitalData.getModel();
        model.setRowCount(0);
        for(Hospital h: hospitalDirectory.getHospitalDirectory())
        {
            Object[] row = new Object[4];
            row[0] = h;
            row[1] = h.getHospitalID();
            row[2] = h.getHospitalCommunity();
            row[3] = h.getHospitalCity();
            if(row[2].equals(searchItem)){ model.addRow(row); }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        hospitalCommunityDropDown = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        hospitalData = new javax.swing.JTable();
        viewHospitalButton = new javax.swing.JButton();
        deleteHospitalButton = new javax.swing.JButton();
        updateHospitalButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        hospitalName = new javax.swing.JTextField();
        hospitalID = new javax.swing.JTextField();
        hospitalCommunity = new javax.swing.JTextField();
        hospitalCity = new javax.swing.JTextField();
        searchFieldButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(160, 208, 214));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        backButton.setText("<<BACK");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(545, 32, -1, -1));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setText("Enter community to search");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(108, 96, -1, -1));

        hospitalCommunityDropDown.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        hospitalCommunityDropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(hospitalCommunityDropDown, new org.netbeans.lib.awtextra.AbsoluteConstraints(347, 92, -1, -1));

        hospitalData.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        hospitalData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Hospital Name", "Hospital ID", "Community", "City"
            }
        ));
        jScrollPane1.setViewportView(hospitalData);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 138, 565, 157));

        viewHospitalButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        viewHospitalButton.setText("View");
        viewHospitalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewHospitalButtonActionPerformed(evt);
            }
        });
        add(viewHospitalButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 307, -1, -1));

        deleteHospitalButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        deleteHospitalButton.setText("Delete");
        deleteHospitalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteHospitalButtonActionPerformed(evt);
            }
        });
        add(deleteHospitalButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(318, 307, -1, -1));

        updateHospitalButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        updateHospitalButton.setText("Update");
        updateHospitalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateHospitalButtonActionPerformed(evt);
            }
        });
        add(updateHospitalButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(556, 307, -1, -1));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel2.setText("Name");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 398, -1, -1));
        jLabel2.setVisible(false);

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel3.setText("ID");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 439, -1, -1));
        jLabel3.setVisible(false);

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel4.setText("Community");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 480, -1, -1));
        jLabel4.setVisible(false);

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel5.setText("City");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 521, -1, -1));
        jLabel5.setVisible(false);

        hospitalName.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        add(hospitalName, new org.netbeans.lib.awtextra.AbsoluteConstraints(351, 390, 150, 35));
        hospitalName.setVisible(false);

        hospitalID.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        hospitalID.setEnabled(false);
        add(hospitalID, new org.netbeans.lib.awtextra.AbsoluteConstraints(351, 431, 150, 35));
        hospitalID.setVisible(false);

        hospitalCommunity.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        add(hospitalCommunity, new org.netbeans.lib.awtextra.AbsoluteConstraints(351, 472, 150, 35));
        hospitalCommunity.setVisible(false);

        hospitalCity.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        add(hospitalCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(351, 513, 150, 35));
        hospitalCity.setVisible(false);

        searchFieldButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        searchFieldButton.setText("Search");
        searchFieldButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldButtonActionPerformed(evt);
            }
        });
        add(searchFieldButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(488, 91, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void deleteHospitalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteHospitalButtonActionPerformed
        // TODO add your handling code here:
        selectedCommunityField = String.valueOf(hospitalCommunityDropDown.getSelectedItem());
        int selectedRowIndex = hospitalData.getSelectedRow();
        if(selectedRowIndex<0)
        {
            JOptionPane.showMessageDialog(this,"Please select a row to delete!!");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) hospitalData.getModel();
        Hospital selectedHospital = (Hospital) model.getValueAt(selectedRowIndex, 0);
        hospitalDirectory.removeHospital(selectedHospital);
        JOptionPane.showMessageDialog(this,"Hospital deleted.");
        
        createDropDown();
        populateTable(selectedCommunityField);
    }//GEN-LAST:event_deleteHospitalButtonActionPerformed

    private void viewHospitalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewHospitalButtonActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = hospitalData.getSelectedRow();
        if(selectedRowIndex<0)
        {
            JOptionPane.showMessageDialog(this,"Please select a row to view!!");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) hospitalData.getModel();
        Hospital selectedHospital = (Hospital) model.getValueAt(selectedRowIndex,0);
        
        jLabel2.setVisible(true);
        jLabel3.setVisible(true);
        jLabel4.setVisible(true);
        jLabel5.setVisible(true);
        hospitalName.setVisible(true);
        hospitalID.setVisible(true);
        hospitalCommunity.setVisible(true);
        hospitalCity.setVisible(true);
        
        hospitalName.setText(selectedHospital.getHospitalName());
        hospitalID.setText(String.valueOf(selectedHospital.getHospitalID()));
        hospitalCommunity.setText(selectedHospital.getHospitalCommunity());
        hospitalCity.setText(selectedHospital.getHospitalCity());
    }//GEN-LAST:event_viewHospitalButtonActionPerformed

    private void updateHospitalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateHospitalButtonActionPerformed
        // TODO add your handling code here:
        selectedCommunityField = String.valueOf(hospitalCommunityDropDown.getSelectedItem());
        selectedCommunityField = String.valueOf(hospitalCommunityDropDown.getSelectedItem());
        int selectedRowIndex = hospitalData.getSelectedRow();
        if(selectedRowIndex<0)
        {
            JOptionPane.showMessageDialog(this, "Please select a row to update.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) hospitalData.getModel();
        Hospital hospital = (Hospital) model.getValueAt(selectedRowIndex, 0);
        
        boolean saveFlag = true;
        if(hospitalID.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please click on view button before you update! ");
            saveFlag = false;
        }
        else if((hospitalName.getText()).isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Hospital Name can't be empty");
            saveFlag = false;
        }else if(validateInput(hospitalName.getText()) == false )
        {
           JOptionPane.showMessageDialog(this, "Invalid Hospital Name");
           saveFlag = false;
        }else if ((hospitalCommunity.getText()).isEmpty()){
            JOptionPane.showMessageDialog(this, "Hospital Community can't be empty");
           saveFlag = false;
        }
        else if(validateInput(hospitalCommunity.getText()) == false )
        {
           JOptionPane.showMessageDialog(this, "Invalid Hospital Community");
           saveFlag = false;
        }else if((hospitalCity.getText()).isEmpty()){
            JOptionPane.showMessageDialog(this, "Hospital City can't be empty");
           saveFlag = false;
        }else if(validateInput(hospitalCity.getText()) == false )
        {
           JOptionPane.showMessageDialog(this, "Invalid Hospital City");
           saveFlag = false;
        }
        
        
        if(saveFlag == true){
        String[] items_array = {hospitalName.getText(), hospitalID.getText(), hospitalCommunity.getText(), hospitalCity.getText()};
        Hospital selectedHospital = hospitalDirectory.addHospital();
        
        hospital.setHospitalName(items_array[0]);
        hospital.setHospitalID(Integer.parseInt(items_array[1]));
        hospital.setHospitalCommunity(items_array[2]);
        hospital.setHospitalCity(items_array[3]);
        JOptionPane.showMessageDialog(this,"Hospital details are updated..");
        
        hospitalName.setText("");
        hospitalID.setText("");
        hospitalCommunity.setText("");
        hospitalCity.setText("");
        
        hospitalDirectory.removeHospital(selectedHospital);
        createDropDown();
        populateTable(selectedCommunityField);
        }
    }//GEN-LAST:event_updateHospitalButtonActionPerformed

    private void searchFieldButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldButtonActionPerformed
        // TODO add your handling code here:
        selectedCommunityField = String.valueOf(hospitalCommunityDropDown.getSelectedItem());
        populateTable(selectedCommunityField);
    }//GEN-LAST:event_searchFieldButtonActionPerformed

private boolean validateInput(String hospitalValues) {
        //String regex = "[a-zA-Z]+";  
        String regex = "[A-Z a-z]*\\s*?";
        return hospitalValues.matches(regex);  
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton deleteHospitalButton;
    private javax.swing.JTextField hospitalCity;
    private javax.swing.JTextField hospitalCommunity;
    private javax.swing.JComboBox<String> hospitalCommunityDropDown;
    private javax.swing.JTable hospitalData;
    private javax.swing.JTextField hospitalID;
    private javax.swing.JTextField hospitalName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton searchFieldButton;
    private javax.swing.JButton updateHospitalButton;
    private javax.swing.JButton viewHospitalButton;
    // End of variables declaration//GEN-END:variables
}
