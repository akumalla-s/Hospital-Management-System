/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Community;

import java.awt.CardLayout;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Person;
import model.PersonDirectory;

/**
 *
 * @author karthiksonti
 */
public class ManagePeopleJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManagePeopleJPanel
     */
    JPanel userProcessContainer;
    int selectedRowIndex;
    PersonDirectory personDirectory;
    String selectedCommunityField;
    public ManagePeopleJPanel(JPanel userProcessContainer, PersonDirectory personDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.personDirectory = personDirectory;
        
        createDropDown();
    }
    //function to create dropdown
    public void createDropDown(){
        String[] communityArray = new String[30];
        personCommunityDropDown.removeAllItems();
        int counter=0;
        for(Person p : personDirectory.getPersonDirectory())
        {
            boolean retval = Arrays.asList(communityArray).contains(p.getPersonCommunity());
            if(retval == false)
            {
                communityArray[counter] = p.getPersonCommunity();
                counter++;
                personCommunityDropDown.addItem(p.getPersonCommunity());
            }     
        }
    }
    private void populateTable(String searchItem)
    {
        DefaultTableModel model = (DefaultTableModel) peopleData.getModel();
        model.setRowCount(0);
        for(Person p: personDirectory.getPersonDirectory())
        {
            Object[] row = new Object[7];
            row[0] = p;
            row[1] = p.getPersonID();
            row[2] = p.getPersonAge();
            row[3] = p.getPersonSex();
            row[4] = p.getPersonHouse();
            row[5] = p.getPersonCommunity();
            row[6] = p.getPersonCity();
            if(row[5].equals(searchItem)){model.addRow(row);}
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backButton = new javax.swing.JButton();
        updateHospitalButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        peopleName = new javax.swing.JTextField();
        personCommunityDropDown = new javax.swing.JComboBox<>();
        peopleID = new javax.swing.JTextField();
        peopleAge = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        peopleData = new javax.swing.JTable();
        peopleSex = new javax.swing.JTextField();
        viewHospitalButton = new javax.swing.JButton();
        deleteHospitalButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        peopleHouse = new javax.swing.JTextField();
        peopleCommunity = new javax.swing.JTextField();
        peopleCity = new javax.swing.JTextField();
        searchFieldButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(160, 208, 214));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        backButton.setText("<<BACK");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 40, -1, -1));

        updateHospitalButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        updateHospitalButton.setText("Update");
        updateHospitalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateHospitalButtonActionPerformed(evt);
            }
        });
        add(updateHospitalButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(539, 281, -1, -1));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel2.setText("Name");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 372, -1, -1));
        jLabel2.setVisible(false);

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel3.setText("ID");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 413, -1, -1));
        jLabel3.setVisible(false);

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel4.setText("Age");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 454, -1, -1));
        jLabel4.setVisible(false);

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel5.setText("Gender");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 495, -1, -1));
        jLabel5.setVisible(false);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setText("Enter community to search");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(83, 80, -1, -1));

        peopleName.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        add(peopleName, new org.netbeans.lib.awtextra.AbsoluteConstraints(327, 364, 150, 35));
        peopleName.setVisible(false);

        personCommunityDropDown.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        personCommunityDropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        personCommunityDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                personCommunityDropDownActionPerformed(evt);
            }
        });
        add(personCommunityDropDown, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 76, -1, -1));

        peopleID.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        peopleID.setEnabled(false);
        peopleID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                peopleIDActionPerformed(evt);
            }
        });
        add(peopleID, new org.netbeans.lib.awtextra.AbsoluteConstraints(327, 405, 150, 35));
        peopleID.setVisible(false);

        peopleAge.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        add(peopleAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(327, 446, 150, 35));
        peopleAge.setVisible(false);

        peopleData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "ID", "Age", "Gender", "House", "Community", "City"
            }
        ));
        jScrollPane1.setViewportView(peopleData);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 122, 565, 141));

        peopleSex.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        add(peopleSex, new org.netbeans.lib.awtextra.AbsoluteConstraints(327, 487, 150, 35));
        peopleSex.setVisible(false);

        viewHospitalButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        viewHospitalButton.setText("View");
        viewHospitalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewHospitalButtonActionPerformed(evt);
            }
        });
        add(viewHospitalButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 281, -1, -1));

        deleteHospitalButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        deleteHospitalButton.setText("Delete");
        deleteHospitalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteHospitalButtonActionPerformed(evt);
            }
        });
        add(deleteHospitalButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(301, 281, -1, -1));

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel6.setText("House");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 536, -1, -1));
        jLabel6.setVisible(false);

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel7.setText("Community");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 577, -1, -1));
        jLabel7.setVisible(false);

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel8.setText("City");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 618, -1, -1));
        jLabel8.setVisible(false);

        peopleHouse.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        add(peopleHouse, new org.netbeans.lib.awtextra.AbsoluteConstraints(327, 528, 150, 35));
        peopleHouse.setVisible(false);

        peopleCommunity.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        peopleCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                peopleCommunityActionPerformed(evt);
            }
        });
        add(peopleCommunity, new org.netbeans.lib.awtextra.AbsoluteConstraints(327, 569, 150, 35));
        peopleCommunity.setVisible(false);

        peopleCity.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        add(peopleCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(327, 610, 150, 35));
        peopleCity.setVisible(false);

        searchFieldButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        searchFieldButton.setText("Search");
        searchFieldButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldButtonActionPerformed(evt);
            }
        });
        add(searchFieldButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(463, 75, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void deleteHospitalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteHospitalButtonActionPerformed
        // TODO add your handling code here:
        selectedCommunityField = String.valueOf(personCommunityDropDown.getSelectedItem());
        int selectedRowIndex = peopleData.getSelectedRow();
        if(selectedRowIndex<0)
        {
            JOptionPane.showMessageDialog(this,"Please select a row to delete!!");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) peopleData.getModel();
        Person selectedPerson = (Person) model.getValueAt(selectedRowIndex, 0);
        personDirectory.removePerson(selectedPerson);
        JOptionPane.showMessageDialog(this,"Person deleted.");
        
        createDropDown();
        populateTable(selectedCommunityField);
    }//GEN-LAST:event_deleteHospitalButtonActionPerformed

    private void peopleIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_peopleIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_peopleIDActionPerformed

    private void peopleCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_peopleCommunityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_peopleCommunityActionPerformed

    private void viewHospitalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewHospitalButtonActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = peopleData.getSelectedRow();
        if(selectedRowIndex<0)
        {
            JOptionPane.showMessageDialog(this,"Please select a row to view!!");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) peopleData.getModel();
        Person selectedPerson = (Person) model.getValueAt(selectedRowIndex,0);
        
        jLabel2.setVisible(true);
        jLabel3.setVisible(true);
        jLabel4.setVisible(true);
        jLabel5.setVisible(true);
        jLabel6.setVisible(true);
        jLabel7.setVisible(true);
        jLabel8.setVisible(true);
        peopleName.setVisible(true);
        peopleID.setVisible(true);
        peopleAge.setVisible(true);
        peopleSex.setVisible(true);
        peopleHouse.setVisible(true);
        peopleCommunity.setVisible(true);
        peopleCity.setVisible(true);
    
        peopleName.setText(selectedPerson.getPersonName());
        peopleID.setText(String.valueOf(selectedPerson.getPersonID()));
        peopleAge.setText(String.valueOf(selectedPerson.getPersonAge()));
        peopleSex.setText(selectedPerson.getPersonSex());
        peopleHouse.setText(selectedPerson.getPersonHouse());
        peopleCommunity.setText(selectedPerson.getPersonCommunity());
        peopleCity.setText(selectedPerson.getPersonCity());
    }//GEN-LAST:event_viewHospitalButtonActionPerformed

    private void updateHospitalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateHospitalButtonActionPerformed
        // TODO add your handling code here:
        selectedCommunityField = String.valueOf(personCommunityDropDown.getSelectedItem());
        int selectedRowIndex = peopleData.getSelectedRow();
        if(selectedRowIndex<0)
        {
            JOptionPane.showMessageDialog(this, "Please select a row to update.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) peopleData.getModel();
        Person person = (Person) model.getValueAt(selectedRowIndex, 0);
        
        boolean saveFlag = true;
        
        if(peopleID.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please click on view button before you update! ");
            saveFlag = false;
        }
        else if((peopleName.getText()).isEmpty()){
            JOptionPane.showMessageDialog(this, "Person Name can't be empty");
            saveFlag = false;
        }else if(peopleName.getText().matches("[A-Z a-z]*\\s*?") == false){
            JOptionPane.showMessageDialog(this, "Enter valid person name");
            saveFlag = false;
        }else if(peopleAge.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Person Age can't be empty");
            saveFlag = false;
        }else if(peopleAge.getText().matches("[0-9]+") == false){
            JOptionPane.showMessageDialog(this, "Person Age is Invalid");
            saveFlag = false;
        }else if(Integer.parseInt(peopleAge.getText()) == 0){
            JOptionPane.showMessageDialog(this, "Person Age can't be zero or null");
            saveFlag = false;
        }else if(Integer.parseInt(peopleAge.getText())>150){
            JOptionPane.showMessageDialog(this, "Person Age is very high, please provide correct age");
            saveFlag = false;
        }else if(peopleHouse.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Person House can't be empty");
            saveFlag = false;
        }else if(peopleHouse.getText().matches("[A-Z a-z]*\\s*?") == false){
            JOptionPane.showMessageDialog(this, "Enter valid person House");
            saveFlag = false;
        }else if(peopleCommunity.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Person Community can't be empty");
            saveFlag = false;
        }else if(peopleCommunity.getText().matches("[A-Z a-z]*\\s*?") == false){
            JOptionPane.showMessageDialog(this, "Enter valid person community");
            saveFlag = false;
        }else if(peopleCity.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Person City can't be empty");
            saveFlag = false;
        }else if(peopleCity.getText().matches("[A-Z a-z]*\\s*?") == false){
            JOptionPane.showMessageDialog(this, "Enter valid person city");
            saveFlag = false;
        }else if(peopleSex.getText().isEmpty()){
             JOptionPane.showMessageDialog(this, "Please type Male or Female");
             saveFlag = false;
        }else if(peopleSex.getText().equals("Male") == false && peopleSex.getText().equals("Female") == false){
             JOptionPane.showMessageDialog(this, "Please type Male or Female");
             saveFlag = false;
        }
        
        if(saveFlag == true){
        //String[] items_array = {peopleName.getText(), peopleID.getText(), peopleAge.getText(), peopleSex.getText(), peopleHouse.getText(), peopleCommunity.getText(), peopleCity.getText()};
        Person selectedPerson = personDirectory.addPerson();
        
        person.setPersonName(peopleName.getText());
        person.setPersonID(Integer.parseInt(peopleID.getText()));
        person.setPersonAge(Integer.parseInt(peopleAge.getText()));
        person.setPersonSex(peopleSex.getText());
        person.setPersonHouse(peopleHouse.getText());
        person.setPersonCommunity(peopleCommunity.getText());
        person.setPersonCity(peopleCity.getText());
        JOptionPane.showMessageDialog(this,"Person details are updated..");
        
        clearTextFields();
        personDirectory.removePerson(selectedPerson);
        createDropDown();
        //personDirectory.removePerson(selectedPerson);
        populateTable(selectedCommunityField);
        }
    }//GEN-LAST:event_updateHospitalButtonActionPerformed

    private void searchFieldButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldButtonActionPerformed
        // TODO add your handling code here:
        selectedCommunityField = String.valueOf(personCommunityDropDown.getSelectedItem());
        populateTable(selectedCommunityField);
    }//GEN-LAST:event_searchFieldButtonActionPerformed

    private void personCommunityDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_personCommunityDropDownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_personCommunityDropDownActionPerformed
private void clearTextFields() {
        peopleName.setText("");
        peopleID.setText("");
        peopleAge.setText("");
        peopleSex.setText("");
        peopleHouse.setText("");
        peopleCommunity.setText("");
        peopleCity.setText("");
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton deleteHospitalButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField peopleAge;
    private javax.swing.JTextField peopleCity;
    private javax.swing.JTextField peopleCommunity;
    private javax.swing.JTable peopleData;
    private javax.swing.JTextField peopleHouse;
    private javax.swing.JTextField peopleID;
    private javax.swing.JTextField peopleName;
    private javax.swing.JTextField peopleSex;
    private javax.swing.JComboBox<String> personCommunityDropDown;
    private javax.swing.JButton searchFieldButton;
    private javax.swing.JButton updateHospitalButton;
    private javax.swing.JButton viewHospitalButton;
    // End of variables declaration//GEN-END:variables
}
